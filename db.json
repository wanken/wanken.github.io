{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/head.jpg","path":"images/head.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wave.png","path":"images/wave.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wave1.png","path":"images/wave1.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/wave_full.png","path":"images/wave_full.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1511847375090},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1511847375091},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1511847375093},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1511847375095},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1511847375096},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1511847375097},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1511847375099},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1511847375100},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1511847375101},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1511847375103},{"_id":"themes/next/README.cn.md","hash":"419b60d064a4ac66565ddeec1be55802acf68c8b","modified":1511847375104},{"_id":"themes/next/README.md","hash":"631d68e9cbced2f11cd976bf883b7d8b08b9b365","modified":1511847375105},{"_id":"themes/next/bower.json","hash":"47471a8f13528dc4052b746db5b4be2375682173","modified":1511847375108},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1511847375109},{"_id":"themes/next/package.json","hash":"39370e2aadf1f9a7c105edff064c6e47682b3932","modified":1511847375229},{"_id":"source/_posts/Javareview-day05.md","hash":"ff542722518ece5da1ab7f79f2540eb1790e3bc9","modified":1511958543164},{"_id":"source/_posts/JavaReview-day06.md","hash":"75048bb4af578219b40b41b6c804ee34411b8d87","modified":1511869748036},{"_id":"source/_posts/hello-world.md","hash":"1fd53c43fd9f21f4e7a6757c1274858efe79c5cf","modified":1511857543185},{"_id":"source/about/index.md","hash":"ecab55c7793f999f05708d53b45cbfeae5a89fae","modified":1511855313343},{"_id":"source/tags/index.md","hash":"a46234ad1cc6ffeb68e1bc93119bbc1a1871a6eb","modified":1511855528794},{"_id":"themes/next/_config.yml","hash":"331938b5250b2cbaf2ce9ce556a6f02418edabc1","modified":1511855498404},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1511847375111},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1511847375113},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1511847375114},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1511847375116},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1511847375117},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1511847375120},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1511847375122},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1511847375123},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1511847375124},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1511847375125},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1511847375126},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1511847375128},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1511847375129},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1511847375130},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1511847375132},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1511847375135},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1511847375221},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1511847375222},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1511847375223},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1511847375224},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1511847375225},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1511847375226},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1511847375228},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1511847375230},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1511847375232},{"_id":"source/categories/index.md","hash":"7a9b86244cd0d64a50e27219c42cb8c6fb80c7d7","modified":1511855103826},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1511847375624},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1511847375625},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1511847375626},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375406},{"_id":"source/_posts/JavaReview-day04.md","hash":"29a2a0db46c2afcb5473ddde1a1ee9e63e93138b","modified":1511959412500},{"_id":"source/_posts/JavaReview-day03.md","hash":"f4622c7ed4dceab8a84072d5e2b80a8ed8da4fd0","modified":1511859349581},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1511847375133},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1511847375134},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1511847375136},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1511847375137},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1511847375138},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1511847375140},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b9f9959225876fb56fb3fba96306d19396e704d4","modified":1511847375142},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1511847375143},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1511847375144},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1511847375145},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1511847375147},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1511847375151},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1511847375152},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1511847375153},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1511847375154},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1511847375166},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1511847375167},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1511847375174},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1511847375204},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1511847375205},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1511847375207},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1511847375208},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1511847375209},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1511847375210},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1511847375211},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1511847375234},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1511847375236},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1511847375237},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1511847375238},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1511847375240},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1511847375241},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1511847375242},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1511847375243},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1511847375244},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1511847375406},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1511847375408},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511847375409},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511847375410},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1511847375412},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1511847375413},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1511847375414},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1511847375415},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1511847375417},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1511847375418},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1511847375419},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"282ddfad637413c58d09ba6fc41c84bac1f65d1c","modified":1511846828381},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"a93596e8de150c8a82fa7a59d8212ac0119a81fa","modified":1511847532516},{"_id":"themes/next/source/images/head.jpg","hash":"037c34b9ae8c9b1682c612a392b519e0129f0b42","modified":1511083685478},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511847375423},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1511847375424},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511847375426},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1511847375427},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1511847375428},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511847375429},{"_id":"themes/next/source/images/wave.png","hash":"405fcb4e8a6819bf6562fcd7d8643179ab5dec93","modified":1511081665000},{"_id":"themes/next/source/images/wave1.png","hash":"8c7683bb139e407faa425647fd9948a2e09d329a","modified":1511081916000},{"_id":"themes/next/source/images/wave_full.png","hash":"832ce139a6c77cb97e705ade7fba6745d328c9bd","modified":1511081916000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375170},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375171},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375361},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375361},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375364},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375401},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511847375404},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1511847375149},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1511847375150},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1511847375156},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1511847375157},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1511847375158},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1511847375160},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1511847375162},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1511847375163},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1511847375164},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1511847375169},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1511847375170},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1511847375172},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1511847375176},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1511847375177},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1511847375179},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1511847375180},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1511847375181},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1511847375182},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1511847375184},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1511847375185},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1511847375186},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1511847375187},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1511847375189},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1511847375190},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1511847375191},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1511847375192},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1511847375193},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1511847375195},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1511847375196},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1511847375198},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1511847375199},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1511847375201},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1511847375202},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1511847375203},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1511847375215},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1511847375217},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1511847375218},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1511847375219},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1511847375358},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1511847375360},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1511847375363},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1511847375364},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1511847375399},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1511847375400},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1511847375402},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1511847375403},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1511847375432},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1511847375433},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1511847375434},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1511847375435},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1511847375437},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1511847375439},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1511847375440},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1511847375442},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1511847375444},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1511847375446},{"_id":"themes/next/source/js/src/utils.js","hash":"b7ddc240208d57596a67c78a04a11b0f0bdecc97","modified":1511847375447},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511847375469},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511847375476},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1511847375478},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1511847375504},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1511847375505},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1511847375507},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1511847375509},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1511847375514},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1511847375516},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1511847375518},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1511847375519},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1511847375521},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1511847375551},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1511847375555},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1511847375557},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1511847375558},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1511847375560},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1511847375562},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1511847375563},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1511847375567},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1511847375569},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1511847375572},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511847375574},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511847375575},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511847375577},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511847375579},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511847375581},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511847375583},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511847375584},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511847375586},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511847375587},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511847375588},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511847375590},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511847375593},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511847375591},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1511847375594},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1511847375596},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1511847375597},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1511847375599},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1511847375611},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1511847375612},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1511847375619},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1511847375621},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1511847375623},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1511847375553},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1511847375213},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1511847375214},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1511847375247},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1511847375248},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1511847375249},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1511847375251},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1511847375252},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1511847375276},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1511847375317},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1511847375348},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1511847375349},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1511847375351},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1511847375353},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1511847375354},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1511847375355},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1511847375357},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1511847375367},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1511847375369},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1511847375370},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1511847375372},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1511847375374},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1511847375375},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1511847375377},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1511847375378},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1511847375383},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1511847375385},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"a98ad885ee4f48d85b2578a0b9c2bbf166e96733","modified":1511847375386},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1511847375387},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1511847375388},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1511847375391},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1511847375392},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1511847375393},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1511847375395},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"30561ed60fc64f3e4ce85143bdb55faa814743a6","modified":1511847375396},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1511847375397},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1511847375443},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1511847375461},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1511847375464},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1511847375468},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511847375480},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511847375482},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511847375483},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511847375485},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511847375486},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511847375488},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1511847375498},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1511847375501},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1511847375502},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1511847375511},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511847375512},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1511847375523},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1511847375524},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1511847375526},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1511847375608},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1511847375609},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1511847375463},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511847375547},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511847375549},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1511847375616},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1511847375254},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1511847375256},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1511847375257},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1511847375258},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1511847375260},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1511847375261},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1511847375263},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1511847375264},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1511847375266},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1511847375268},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1511847375269},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1511847375271},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1511847375273},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1511847375275},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1511847375278},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1511847375279},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1511847375281},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1511847375283},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1511847375284},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1511847375286},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1511847375287},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1511847375289},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1511847375290},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1511847375292},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1511847375293},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1511847375295},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1511847375296},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1511847375298},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1511847375299},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1511847375301},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1511847375304},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1511847375306},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1511847375307},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1511847375309},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1511847375310},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1511847375312},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1511847375314},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1511847375315},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1511847375318},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1511847375320},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1511847375321},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1511847375323},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1511847375324},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1511847375326},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1511847375327},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1511847375329},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1511847375330},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1511847375332},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1511847375334},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1511847375336},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1511847375337},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1511847375339},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1511847375340},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1511847375342},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1511847375343},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1511847375344},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1511847375346},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1511847375379},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1511847375382},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1511847375390},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511847375452},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511847375455},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511847375456},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511847375457},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511847375459},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511847375489},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1511847375491},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1511847375493},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1511847375494},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1511847375495},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1511847375497},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511847375531},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511847375535},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511847375545},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1511856075208},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1511847375475},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1511847375606},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1511847375541}],"Category":[{"name":"Java","_id":"cjal06r6x000dwkkxetwb55j3"}],"Data":[],"Page":[{"title":"tags","date":"2017-11-28T07:44:28.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-11-28 15:44:28\ntype: \"tags\"\n---\n","updated":"2017-11-28T07:52:08.794Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjal06qxw0001wkkxf7mkbuzt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2017-11-28T07:48:33.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-11-28 15:48:33\n---\n","updated":"2017-11-28T07:48:33.343Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjal06qy00003wkkxavuscot4","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2017-11-28T07:27:54.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-11-28 15:27:54\ntype: \"categories\"\n---\n","updated":"2017-11-28T07:45:03.826Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjal06r5f0009wkkxhuy3vvm5","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Javareview-day05","date":"2017-11-29T10:55:32.000Z","type":["Java","Review"],"_content":"# Java第五天\n## 封装\n  - 私有只是封装的一种表现形式\n\n## 构造函数\n  1. 对象一建立,就会调用与之对应的构造函数(可以用于对象的初始化工作);\n  2. 当一个类中没有定义构造函数时, 那么系统会默认给该类加入一个空参数的构造方法;\n  3. 当在类中定义了构造函数后,默认的构造函数就会消失;\n  4. 构造函数和在对象已建立就运行, 给对象初始化; 而一般方法是对象调用才运行,\n  是给对象添加对象具备的功能;\n","source":"_posts/Javareview-day05.md","raw":"---\ntitle: Javareview-day05\ndate: 2017-11-29 18:55:32\ntags: [Java]\ntype: [Java, Review]\n---\n# Java第五天\n## 封装\n  - 私有只是封装的一种表现形式\n\n## 构造函数\n  1. 对象一建立,就会调用与之对应的构造函数(可以用于对象的初始化工作);\n  2. 当一个类中没有定义构造函数时, 那么系统会默认给该类加入一个空参数的构造方法;\n  3. 当在类中定义了构造函数后,默认的构造函数就会消失;\n  4. 构造函数和在对象已建立就运行, 给对象初始化; 而一般方法是对象调用才运行,\n  是给对象添加对象具备的功能;\n","slug":"Javareview-day05","published":1,"updated":"2017-11-29T12:29:03.164Z","_id":"cjal06qxp0000wkkxlb9nbt2l","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Java第五天\"><a href=\"#Java第五天\" class=\"headerlink\" title=\"Java第五天\"></a>Java第五天</h1><h2 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h2><ul>\n<li>私有只是封装的一种表现形式</li>\n</ul>\n<h2 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h2><ol>\n<li>对象一建立,就会调用与之对应的构造函数(可以用于对象的初始化工作);</li>\n<li>当一个类中没有定义构造函数时, 那么系统会默认给该类加入一个空参数的构造方法;</li>\n<li>当在类中定义了构造函数后,默认的构造函数就会消失;</li>\n<li>构造函数和在对象已建立就运行, 给对象初始化; 而一般方法是对象调用才运行,<br>是给对象添加对象具备的功能;</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Java第五天\"><a href=\"#Java第五天\" class=\"headerlink\" title=\"Java第五天\"></a>Java第五天</h1><h2 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h2><ul>\n<li>私有只是封装的一种表现形式</li>\n</ul>\n<h2 id=\"构造函数\"><a href=\"#构造函数\" class=\"headerlink\" title=\"构造函数\"></a>构造函数</h2><ol>\n<li>对象一建立,就会调用与之对应的构造函数(可以用于对象的初始化工作);</li>\n<li>当一个类中没有定义构造函数时, 那么系统会默认给该类加入一个空参数的构造方法;</li>\n<li>当在类中定义了构造函数后,默认的构造函数就会消失;</li>\n<li>构造函数和在对象已建立就运行, 给对象初始化; 而一般方法是对象调用才运行,<br>是给对象添加对象具备的功能;</li>\n</ol>\n"},{"title":"JavaReview-day06","date":"2017-11-28T11:49:08.000Z","_content":"","source":"_posts/JavaReview-day06.md","raw":"---\ntitle: JavaReview-day06\ndate: 2017-11-28 19:49:08\ntags:\n---\n","slug":"JavaReview-day06","published":1,"updated":"2017-11-28T11:49:08.036Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjal06qxx0002wkkxidlnpziq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Hello World","type":"default","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags:\n      - Welcome\ntype: \"default\"\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-11-28T05:36:15.086Z","updated":"2017-11-28T08:25:43.185Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjal06qy30005wkkxyxmauvpe","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n"},{"title":"JavaReview-day04","date":"2017-11-28T08:14:34.000Z","type":["Java","Review"],"_content":"\n### 数组\n\n      1. 数据类型分类: 基本数据类型, 引用数据类型\n      2. Java 程序在运行时,需要在内存中分配空间, 为了提高运算效率, 又对空间进行了不同区域的划分 因为每一片区域都有特定的处理数据的方式和内存管理方式 共分为五个区域: 栈内存, 堆内存, 方法区, 本地方法区, 寄存器\n\n    - 栈内存:用于存储局部变量, 当数据使用完, 所占空间会自动释放;\n    - 堆内存:\n      1. 数组和对象,通过 new 建立的实例都存放在堆内存中;\n      2. 每一个实体都有内存地址值;\n      3. 实体中的变量都有默认的初始化值\n      4. 实体不再被使用时, 会在不确定的时间内被垃圾回收器回收\n\n### 数组的定义方式\n\n        1. int[] arr = new int[5]; (推荐写法)\n        2. int arr[] = new int[5]; (与第一种意义相同)\n        3. int[] arr = new int[]{1, 2, 3, 4, 5}; (静态初始化方式)\n        4. int[] arr = {1, 2, 3, 4, 5} (第三种的简化格式)\n\n#### 数组排序\n##### 选择排序\n\n```\n        public void selectSort(int[] arr){\n            for(int x = 0; x < arr.length-1; x++){\n                for(int y = x + 1; y < arr.length; y++){\n                    if(arr[x] > arr[y]){\n                        int temp = arr[x];\n                        arr[x] = arr[y];\n                        arr[y] = temp;\n                    }\n                }\n            }\n        }\n```\n> 说明: 选择排序是用当前元素与其他所有元素比较, 如果符合条件,就交换位置\n\n##### 冒泡排序\n```  \n        public void bubbleSort(int[] arr){\n            for(int x = 0; x < arr.length; x ++){\n                for(int y = 0; y < arr.length - x - 1; y ++){\n                    if(arr[y] > arr[y + 1]){\n                        int temp = arr[y];\n                        arr[y] = arr[y + 1];\n                        arr[y + 1] = temp;\n\n                    }\n                }\n            }\n        }\n```\n##### 说明: 冒泡排序是用相邻的元素进行比较, 如果符合条件,就交换位置\n##### 使用 java.util包中的 Array.sort(arr); 可以进行排序数组\n\n- 将数组交换的方法进行封装\n```\n        public void swap(int[] arr, int a, int b){\n            int temp = arr[a];\n            arr[b] = arr[a];\n            arr[b] = temp;\n        }\n```\n##### 使用异或方式实现\n\n```\n        public void swap1(int arr, int a, int b){\n            arr[b] = arr[b] ^ arr[a];\n            arr[a] = arr[b] ^ arr[a];\n            arr[b] = arr[b] ^ arr[a];\n        }\n```\n\n#### 折半查找\n##### 第一种方式\n  ```\n     public int halfSearch (int[] arr, int key){\n       int min = 0;\n       int max = arr.length - 1;\n       int mid = (min + max)/2;\n       while(arr[mid] != key){\n         if(key < arr[mid]){\n           max = mid - 1;\n         }else if(key > arr[mid]){\n           min = mid + 1;\n         }\n         mid = (min + max)/2;\n       }\n       return mid;\n     }\n```\n##### 第二种方式\n   ```\n     public int halfSearch2(int arr[], int key){\n       int min = 0;\n       int max = arr.length;\n       while(min <= max){\n          mid = (min + max) >> 1;\n          if(key > arr[mid]){\n            min = mid + 1;\n          }else if(key < arr[mid]){\n            max = mid -1;\n          }else{\n            return mid;\n          }\n          return -1;\n\n       }\n\n     }\n   ```\n\n\n> 面试题:将一个数字插入一个有序数组, 插入后,保证数组有序;\n\n- 思路: 通过折半查找, 找到所插入数组的下标, 如果数组中存在与插入值相同的值,则在该元素之前插入\n\n##### 十进制转二进制\n  ```\n    public void decimalToBinary() {\n            int num = 8;\n            StringBuffer sb = new StringBuffer();\n            while (num > 0) {\n                sb.append(num % 2);\n                num = num / 2;\n            }\n            System.out.println(sb.reverse());\n        }\n  ```\n\n##### 十进制转十六进制\n - 第一种方式\n\n```\n  public void decimalToHexadecimal() {\n        int num = 60;\n        StringBuffer stringBuffer = new StringBuffer();\n        for (int x = 0; x < 8; x++) {\n            int temp = num & 15;\n            if (temp > 9) {\n                stringBuffer.append((char) (temp - 10 + 'A'));\n            } else {\n                stringBuffer.append(temp);\n            }\n            num = num >>> 4;\n        }\n        System.out.println(stringBuffer.reverse());\n    }\n```\n**二维数组的定义方法**\n```\n  int[][]\n```\n","source":"_posts/JavaReview-day04.md","raw":"---\ntitle: JavaReview-day04\ndate: 2017-11-28 16:14:34\ntags: -Java\ntype: [Java, Review]\n\n---\n\n### 数组\n\n      1. 数据类型分类: 基本数据类型, 引用数据类型\n      2. Java 程序在运行时,需要在内存中分配空间, 为了提高运算效率, 又对空间进行了不同区域的划分 因为每一片区域都有特定的处理数据的方式和内存管理方式 共分为五个区域: 栈内存, 堆内存, 方法区, 本地方法区, 寄存器\n\n    - 栈内存:用于存储局部变量, 当数据使用完, 所占空间会自动释放;\n    - 堆内存:\n      1. 数组和对象,通过 new 建立的实例都存放在堆内存中;\n      2. 每一个实体都有内存地址值;\n      3. 实体中的变量都有默认的初始化值\n      4. 实体不再被使用时, 会在不确定的时间内被垃圾回收器回收\n\n### 数组的定义方式\n\n        1. int[] arr = new int[5]; (推荐写法)\n        2. int arr[] = new int[5]; (与第一种意义相同)\n        3. int[] arr = new int[]{1, 2, 3, 4, 5}; (静态初始化方式)\n        4. int[] arr = {1, 2, 3, 4, 5} (第三种的简化格式)\n\n#### 数组排序\n##### 选择排序\n\n```\n        public void selectSort(int[] arr){\n            for(int x = 0; x < arr.length-1; x++){\n                for(int y = x + 1; y < arr.length; y++){\n                    if(arr[x] > arr[y]){\n                        int temp = arr[x];\n                        arr[x] = arr[y];\n                        arr[y] = temp;\n                    }\n                }\n            }\n        }\n```\n> 说明: 选择排序是用当前元素与其他所有元素比较, 如果符合条件,就交换位置\n\n##### 冒泡排序\n```  \n        public void bubbleSort(int[] arr){\n            for(int x = 0; x < arr.length; x ++){\n                for(int y = 0; y < arr.length - x - 1; y ++){\n                    if(arr[y] > arr[y + 1]){\n                        int temp = arr[y];\n                        arr[y] = arr[y + 1];\n                        arr[y + 1] = temp;\n\n                    }\n                }\n            }\n        }\n```\n##### 说明: 冒泡排序是用相邻的元素进行比较, 如果符合条件,就交换位置\n##### 使用 java.util包中的 Array.sort(arr); 可以进行排序数组\n\n- 将数组交换的方法进行封装\n```\n        public void swap(int[] arr, int a, int b){\n            int temp = arr[a];\n            arr[b] = arr[a];\n            arr[b] = temp;\n        }\n```\n##### 使用异或方式实现\n\n```\n        public void swap1(int arr, int a, int b){\n            arr[b] = arr[b] ^ arr[a];\n            arr[a] = arr[b] ^ arr[a];\n            arr[b] = arr[b] ^ arr[a];\n        }\n```\n\n#### 折半查找\n##### 第一种方式\n  ```\n     public int halfSearch (int[] arr, int key){\n       int min = 0;\n       int max = arr.length - 1;\n       int mid = (min + max)/2;\n       while(arr[mid] != key){\n         if(key < arr[mid]){\n           max = mid - 1;\n         }else if(key > arr[mid]){\n           min = mid + 1;\n         }\n         mid = (min + max)/2;\n       }\n       return mid;\n     }\n```\n##### 第二种方式\n   ```\n     public int halfSearch2(int arr[], int key){\n       int min = 0;\n       int max = arr.length;\n       while(min <= max){\n          mid = (min + max) >> 1;\n          if(key > arr[mid]){\n            min = mid + 1;\n          }else if(key < arr[mid]){\n            max = mid -1;\n          }else{\n            return mid;\n          }\n          return -1;\n\n       }\n\n     }\n   ```\n\n\n> 面试题:将一个数字插入一个有序数组, 插入后,保证数组有序;\n\n- 思路: 通过折半查找, 找到所插入数组的下标, 如果数组中存在与插入值相同的值,则在该元素之前插入\n\n##### 十进制转二进制\n  ```\n    public void decimalToBinary() {\n            int num = 8;\n            StringBuffer sb = new StringBuffer();\n            while (num > 0) {\n                sb.append(num % 2);\n                num = num / 2;\n            }\n            System.out.println(sb.reverse());\n        }\n  ```\n\n##### 十进制转十六进制\n - 第一种方式\n\n```\n  public void decimalToHexadecimal() {\n        int num = 60;\n        StringBuffer stringBuffer = new StringBuffer();\n        for (int x = 0; x < 8; x++) {\n            int temp = num & 15;\n            if (temp > 9) {\n                stringBuffer.append((char) (temp - 10 + 'A'));\n            } else {\n                stringBuffer.append(temp);\n            }\n            num = num >>> 4;\n        }\n        System.out.println(stringBuffer.reverse());\n    }\n```\n**二维数组的定义方法**\n```\n  int[][]\n```\n","slug":"JavaReview-day04","published":1,"updated":"2017-11-29T12:43:32.500Z","_id":"cjal06r6q000awkkxfb0npi2w","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><pre><code>  1. 数据类型分类: 基本数据类型, 引用数据类型\n  2. Java 程序在运行时,需要在内存中分配空间, 为了提高运算效率, 又对空间进行了不同区域的划分 因为每一片区域都有特定的处理数据的方式和内存管理方式 共分为五个区域: 栈内存, 堆内存, 方法区, 本地方法区, 寄存器\n\n- 栈内存:用于存储局部变量, 当数据使用完, 所占空间会自动释放;\n- 堆内存:\n  1. 数组和对象,通过 new 建立的实例都存放在堆内存中;\n  2. 每一个实体都有内存地址值;\n  3. 实体中的变量都有默认的初始化值\n  4. 实体不再被使用时, 会在不确定的时间内被垃圾回收器回收\n</code></pre><h3 id=\"数组的定义方式\"><a href=\"#数组的定义方式\" class=\"headerlink\" title=\"数组的定义方式\"></a>数组的定义方式</h3><pre><code>1. int[] arr = new int[5]; (推荐写法)\n2. int arr[] = new int[5]; (与第一种意义相同)\n3. int[] arr = new int[]{1, 2, 3, 4, 5}; (静态初始化方式)\n4. int[] arr = {1, 2, 3, 4, 5} (第三种的简化格式)\n</code></pre><h4 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h4><h5 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void selectSort(int[] arr)&#123;</span><br><span class=\"line\">    for(int x = 0; x &lt; arr.length-1; x++)&#123;</span><br><span class=\"line\">        for(int y = x + 1; y &lt; arr.length; y++)&#123;</span><br><span class=\"line\">            if(arr[x] &gt; arr[y])&#123;</span><br><span class=\"line\">                int temp = arr[x];</span><br><span class=\"line\">                arr[x] = arr[y];</span><br><span class=\"line\">                arr[y] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>说明: 选择排序是用当前元素与其他所有元素比较, 如果符合条件,就交换位置</p>\n</blockquote>\n<h5 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void bubbleSort(int[] arr)&#123;</span><br><span class=\"line\">    for(int x = 0; x &lt; arr.length; x ++)&#123;</span><br><span class=\"line\">        for(int y = 0; y &lt; arr.length - x - 1; y ++)&#123;</span><br><span class=\"line\">            if(arr[y] &gt; arr[y + 1])&#123;</span><br><span class=\"line\">                int temp = arr[y];</span><br><span class=\"line\">                arr[y] = arr[y + 1];</span><br><span class=\"line\">                arr[y + 1] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"说明-冒泡排序是用相邻的元素进行比较-如果符合条件-就交换位置\"><a href=\"#说明-冒泡排序是用相邻的元素进行比较-如果符合条件-就交换位置\" class=\"headerlink\" title=\"说明: 冒泡排序是用相邻的元素进行比较, 如果符合条件,就交换位置\"></a>说明: 冒泡排序是用相邻的元素进行比较, 如果符合条件,就交换位置</h5><h5 id=\"使用-java-util包中的-Array-sort-arr-可以进行排序数组\"><a href=\"#使用-java-util包中的-Array-sort-arr-可以进行排序数组\" class=\"headerlink\" title=\"使用 java.util包中的 Array.sort(arr); 可以进行排序数组\"></a>使用 java.util包中的 Array.sort(arr); 可以进行排序数组</h5><ul>\n<li>将数组交换的方法进行封装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void swap(int[] arr, int a, int b)&#123;</span><br><span class=\"line\">    int temp = arr[a];</span><br><span class=\"line\">    arr[b] = arr[a];</span><br><span class=\"line\">    arr[b] = temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"使用异或方式实现\"><a href=\"#使用异或方式实现\" class=\"headerlink\" title=\"使用异或方式实现\"></a>使用异或方式实现</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void swap1(int arr, int a, int b)&#123;</span><br><span class=\"line\">    arr[b] = arr[b] ^ arr[a];</span><br><span class=\"line\">    arr[a] = arr[b] ^ arr[a];</span><br><span class=\"line\">    arr[b] = arr[b] ^ arr[a];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"折半查找\"><a href=\"#折半查找\" class=\"headerlink\" title=\"折半查找\"></a>折半查找</h4><h5 id=\"第一种方式\"><a href=\"#第一种方式\" class=\"headerlink\" title=\"第一种方式\"></a>第一种方式</h5>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int halfSearch (int[] arr, int key)&#123;</span><br><span class=\"line\">  int min = 0;</span><br><span class=\"line\">  int max = arr.length - 1;</span><br><span class=\"line\">  int mid = (min + max)/2;</span><br><span class=\"line\">  while(arr[mid] != key)&#123;</span><br><span class=\"line\">    if(key &lt; arr[mid])&#123;</span><br><span class=\"line\">      max = mid - 1;</span><br><span class=\"line\">    &#125;else if(key &gt; arr[mid])&#123;</span><br><span class=\"line\">      min = mid + 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid = (min + max)/2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return mid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h5>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int halfSearch2(int arr[], int key)&#123;</span><br><span class=\"line\">  int min = 0;</span><br><span class=\"line\">  int max = arr.length;</span><br><span class=\"line\">  while(min &lt;= max)&#123;</span><br><span class=\"line\">     mid = (min + max) &gt;&gt; 1;</span><br><span class=\"line\">     if(key &gt; arr[mid])&#123;</span><br><span class=\"line\">       min = mid + 1;</span><br><span class=\"line\">     &#125;else if(key &lt; arr[mid])&#123;</span><br><span class=\"line\">       max = mid -1;</span><br><span class=\"line\">     &#125;else&#123;</span><br><span class=\"line\">       return mid;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     return -1;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>面试题:将一个数字插入一个有序数组, 插入后,保证数组有序;</p>\n</blockquote>\n<ul>\n<li>思路: 通过折半查找, 找到所插入数组的下标, 如果数组中存在与插入值相同的值,则在该元素之前插入</li>\n</ul>\n<h5 id=\"十进制转二进制\"><a href=\"#十进制转二进制\" class=\"headerlink\" title=\"十进制转二进制\"></a>十进制转二进制</h5>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void decimalToBinary() &#123;</span><br><span class=\"line\">        int num = 8;</span><br><span class=\"line\">        StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">        while (num &gt; 0) &#123;</span><br><span class=\"line\">            sb.append(num % 2);</span><br><span class=\"line\">            num = num / 2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(sb.reverse());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"十进制转十六进制\"><a href=\"#十进制转十六进制\" class=\"headerlink\" title=\"十进制转十六进制\"></a>十进制转十六进制</h5><ul>\n<li>第一种方式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void decimalToHexadecimal() &#123;</span><br><span class=\"line\">      int num = 60;</span><br><span class=\"line\">      StringBuffer stringBuffer = new StringBuffer();</span><br><span class=\"line\">      for (int x = 0; x &lt; 8; x++) &#123;</span><br><span class=\"line\">          int temp = num &amp; 15;</span><br><span class=\"line\">          if (temp &gt; 9) &#123;</span><br><span class=\"line\">              stringBuffer.append((char) (temp - 10 + &apos;A&apos;));</span><br><span class=\"line\">          &#125; else &#123;</span><br><span class=\"line\">              stringBuffer.append(temp);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          num = num &gt;&gt;&gt; 4;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(stringBuffer.reverse());</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>二维数组的定义方法</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int[][]</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a>数组</h3><pre><code>  1. 数据类型分类: 基本数据类型, 引用数据类型\n  2. Java 程序在运行时,需要在内存中分配空间, 为了提高运算效率, 又对空间进行了不同区域的划分 因为每一片区域都有特定的处理数据的方式和内存管理方式 共分为五个区域: 栈内存, 堆内存, 方法区, 本地方法区, 寄存器\n\n- 栈内存:用于存储局部变量, 当数据使用完, 所占空间会自动释放;\n- 堆内存:\n  1. 数组和对象,通过 new 建立的实例都存放在堆内存中;\n  2. 每一个实体都有内存地址值;\n  3. 实体中的变量都有默认的初始化值\n  4. 实体不再被使用时, 会在不确定的时间内被垃圾回收器回收\n</code></pre><h3 id=\"数组的定义方式\"><a href=\"#数组的定义方式\" class=\"headerlink\" title=\"数组的定义方式\"></a>数组的定义方式</h3><pre><code>1. int[] arr = new int[5]; (推荐写法)\n2. int arr[] = new int[5]; (与第一种意义相同)\n3. int[] arr = new int[]{1, 2, 3, 4, 5}; (静态初始化方式)\n4. int[] arr = {1, 2, 3, 4, 5} (第三种的简化格式)\n</code></pre><h4 id=\"数组排序\"><a href=\"#数组排序\" class=\"headerlink\" title=\"数组排序\"></a>数组排序</h4><h5 id=\"选择排序\"><a href=\"#选择排序\" class=\"headerlink\" title=\"选择排序\"></a>选择排序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void selectSort(int[] arr)&#123;</span><br><span class=\"line\">    for(int x = 0; x &lt; arr.length-1; x++)&#123;</span><br><span class=\"line\">        for(int y = x + 1; y &lt; arr.length; y++)&#123;</span><br><span class=\"line\">            if(arr[x] &gt; arr[y])&#123;</span><br><span class=\"line\">                int temp = arr[x];</span><br><span class=\"line\">                arr[x] = arr[y];</span><br><span class=\"line\">                arr[y] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>说明: 选择排序是用当前元素与其他所有元素比较, 如果符合条件,就交换位置</p>\n</blockquote>\n<h5 id=\"冒泡排序\"><a href=\"#冒泡排序\" class=\"headerlink\" title=\"冒泡排序\"></a>冒泡排序</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void bubbleSort(int[] arr)&#123;</span><br><span class=\"line\">    for(int x = 0; x &lt; arr.length; x ++)&#123;</span><br><span class=\"line\">        for(int y = 0; y &lt; arr.length - x - 1; y ++)&#123;</span><br><span class=\"line\">            if(arr[y] &gt; arr[y + 1])&#123;</span><br><span class=\"line\">                int temp = arr[y];</span><br><span class=\"line\">                arr[y] = arr[y + 1];</span><br><span class=\"line\">                arr[y + 1] = temp;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"说明-冒泡排序是用相邻的元素进行比较-如果符合条件-就交换位置\"><a href=\"#说明-冒泡排序是用相邻的元素进行比较-如果符合条件-就交换位置\" class=\"headerlink\" title=\"说明: 冒泡排序是用相邻的元素进行比较, 如果符合条件,就交换位置\"></a>说明: 冒泡排序是用相邻的元素进行比较, 如果符合条件,就交换位置</h5><h5 id=\"使用-java-util包中的-Array-sort-arr-可以进行排序数组\"><a href=\"#使用-java-util包中的-Array-sort-arr-可以进行排序数组\" class=\"headerlink\" title=\"使用 java.util包中的 Array.sort(arr); 可以进行排序数组\"></a>使用 java.util包中的 Array.sort(arr); 可以进行排序数组</h5><ul>\n<li>将数组交换的方法进行封装<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void swap(int[] arr, int a, int b)&#123;</span><br><span class=\"line\">    int temp = arr[a];</span><br><span class=\"line\">    arr[b] = arr[a];</span><br><span class=\"line\">    arr[b] = temp;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h5 id=\"使用异或方式实现\"><a href=\"#使用异或方式实现\" class=\"headerlink\" title=\"使用异或方式实现\"></a>使用异或方式实现</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void swap1(int arr, int a, int b)&#123;</span><br><span class=\"line\">    arr[b] = arr[b] ^ arr[a];</span><br><span class=\"line\">    arr[a] = arr[b] ^ arr[a];</span><br><span class=\"line\">    arr[b] = arr[b] ^ arr[a];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"折半查找\"><a href=\"#折半查找\" class=\"headerlink\" title=\"折半查找\"></a>折半查找</h4><h5 id=\"第一种方式\"><a href=\"#第一种方式\" class=\"headerlink\" title=\"第一种方式\"></a>第一种方式</h5>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int halfSearch (int[] arr, int key)&#123;</span><br><span class=\"line\">  int min = 0;</span><br><span class=\"line\">  int max = arr.length - 1;</span><br><span class=\"line\">  int mid = (min + max)/2;</span><br><span class=\"line\">  while(arr[mid] != key)&#123;</span><br><span class=\"line\">    if(key &lt; arr[mid])&#123;</span><br><span class=\"line\">      max = mid - 1;</span><br><span class=\"line\">    &#125;else if(key &gt; arr[mid])&#123;</span><br><span class=\"line\">      min = mid + 1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    mid = (min + max)/2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return mid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"第二种方式\"><a href=\"#第二种方式\" class=\"headerlink\" title=\"第二种方式\"></a>第二种方式</h5>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int halfSearch2(int arr[], int key)&#123;</span><br><span class=\"line\">  int min = 0;</span><br><span class=\"line\">  int max = arr.length;</span><br><span class=\"line\">  while(min &lt;= max)&#123;</span><br><span class=\"line\">     mid = (min + max) &gt;&gt; 1;</span><br><span class=\"line\">     if(key &gt; arr[mid])&#123;</span><br><span class=\"line\">       min = mid + 1;</span><br><span class=\"line\">     &#125;else if(key &lt; arr[mid])&#123;</span><br><span class=\"line\">       max = mid -1;</span><br><span class=\"line\">     &#125;else&#123;</span><br><span class=\"line\">       return mid;</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     return -1;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>面试题:将一个数字插入一个有序数组, 插入后,保证数组有序;</p>\n</blockquote>\n<ul>\n<li>思路: 通过折半查找, 找到所插入数组的下标, 如果数组中存在与插入值相同的值,则在该元素之前插入</li>\n</ul>\n<h5 id=\"十进制转二进制\"><a href=\"#十进制转二进制\" class=\"headerlink\" title=\"十进制转二进制\"></a>十进制转二进制</h5>  <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void decimalToBinary() &#123;</span><br><span class=\"line\">        int num = 8;</span><br><span class=\"line\">        StringBuffer sb = new StringBuffer();</span><br><span class=\"line\">        while (num &gt; 0) &#123;</span><br><span class=\"line\">            sb.append(num % 2);</span><br><span class=\"line\">            num = num / 2;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(sb.reverse());</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"十进制转十六进制\"><a href=\"#十进制转十六进制\" class=\"headerlink\" title=\"十进制转十六进制\"></a>十进制转十六进制</h5><ul>\n<li>第一种方式</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void decimalToHexadecimal() &#123;</span><br><span class=\"line\">      int num = 60;</span><br><span class=\"line\">      StringBuffer stringBuffer = new StringBuffer();</span><br><span class=\"line\">      for (int x = 0; x &lt; 8; x++) &#123;</span><br><span class=\"line\">          int temp = num &amp; 15;</span><br><span class=\"line\">          if (temp &gt; 9) &#123;</span><br><span class=\"line\">              stringBuffer.append((char) (temp - 10 + &apos;A&apos;));</span><br><span class=\"line\">          &#125; else &#123;</span><br><span class=\"line\">              stringBuffer.append(temp);</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          num = num &gt;&gt;&gt; 4;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println(stringBuffer.reverse());</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p><strong>二维数组的定义方法</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">int[][]</span><br></pre></td></tr></table></figure></p>\n"},{"title":"JavaReview_day03","date":"2017-11-28T07:04:34.000Z","type":"JavaReview","_content":"\n> Java\n\n## 运算符\n\n### 位运算符:\n\n1.\"<<\": 左位移 2.\">>\": 右位移: 左右为数值的二进制进行左右移动, 其结果等于原值 或 / 2的所以为数的次幂 即 3 << 3 = 3_ 2的三次幂 = 3 * 8 = 24; 3.\"<<<\":无符号左移 4.\">>>\":无符号右移\n\n异或(^)可以用于加密 '&', '|', '^'的运算\n\n使两个变量互换值 m = 3; n = 8; n = n ^ m; m = n ^ m; n = n ^ m;即可完成值互换而不引用第三方变量完成两个变量的值互换\n\n三元运算符 三元运算符会改变所运算元素的数据类型\n\n### 语句\n\nif...else:\n\n三元运算符 对比 if...else 的优缺点 缺点: 三元运算符必须有结果 优点: 三元运算符比 if...else 简单, 可以简化 if...else\n\n二. switch 语句:\n\n1) switch可以中可以接收 byte, short, int char 类型的数据;\n\n2) jdk1.5 加入对枚举类型的支持, jdk1.7 加入了对 String类型的支持;\n\n3) switch 的各个 case 之间和 default 没有顺序,先执行第一个 case, 没有匹配的 case 执行default;\n\n\n#### 结束 switch 语句的两种情况: (1).遇到 break; (2). 执行到 switch 语句结束;\n\n#### 如果匹配的 case  没有对应的 break, 那么程序会继续向下执行, 运行可以执行的语句,\n  直到遇到 break 或程序结束;\n\n4) if ... else 和 switch 语句的对比:\n\n#### switch 性能比 if...else 更高(if ... else 只能顺序执行)\n\n#### 对区间判断可以或对结果为 boolean 类型的判断使用 if, if 的使用范围更广\n\n##  while 语句\n\n### do..while 和 while 的区别\n\n\n#### do...while 先执行循环体, 再判断条件(循环体至少执行一次);\n#### while 先判断再执行\n\n\n## for语句\n\n格式: for(初始化表达式; 循环条件表达式; 循环后表达式){ 执行语句; }\n\n\nfor 循环中的表达式只要为合法的表达式即可运行(循环表达式要有真或假的计算结果);\n\n\n### for 循环中的变量初始化语句只执行一次\n\n### for 循环中的语句不只是一句,多条语句可用 \",\" 隔开,如下:\n\n```\n  for(int x = 0, y = 0, z = 0; x < 4; x ++, y ++,z ++){\n    System.out.println(x+y+z);\n  }\n```\n\n### for 和 while 的无限循环的表达形式\n\n```\n for:\n  for(;;){\n    System.out.println(\"for无限循环\");\n  }\n```\n### 如果 for 循环的条件不声明, 默认为 true;\n\n### while\n```\nwhile(true){\n  System.out.println(\" while 无限循环\");\n}\n```\n\n## break 和 continue 1) break 可以跳出指定循环, 只需要将循环命名即可,具体实现如下\n\n\n```\n    public void testBreak() {\n      w:\n      for (int x = 1; x < 4; x++) {\n          System.out.println(\"out\\t\");\n          q:\n          for (int m = 0; m < 3; m++){\n              if (m == 2){\n                  break w;\n              }\n              System.out.print(\"in\\t\");\n          }\n      }\n      }\n```\n\n  输出结果为: out    in    in\n\n  若将 break 后的 w 删掉,结果为: out    in    in    out    in    in    out    in    in\n\n\n  2). continue\n    作用:结束本次循环,继续下一次循环\n    # 如下代码可以打印 0~10 以内的 2 的倍数:\n```\n        public void testContinue(){\n            for (int i = 0; i < 11; i ++){\n                if (i%2 == 1){\n                    continue;\n                }\n            System.out.println(i);\n            }\n        }\n```\n\n### 1)  continue可以继续指定循环, 只需要将循环命名即可,具体实现如下\n```\n        public void testContinue() {\n          w:\n          for (int i = 0; i < 3; i++) {\n            q:\n            for (int k = 0; k < 4; k++) {\n              System.out.println(\"i = \" + i);\n              continue w;\n              }\n          }\n        }\n```\n\n输出结果为:\n    ```\n               i = 0\n               i = 1\n               i = 2\n    ```\n### break 和 continue语句单独存在时, 下面不可以有任何语句, 因为执行不到(编译报错);\n\n### break 必须在 switch 或 loop(循环)语句内, continue必须在 loop 语句内\n\n### 输出等腰三角形\n```\npublic void testTriangle() {\nfor (int x = 1; x <= 5; x++) {\n    for (int y = x; y < 5; y++) {\n      System.out.print(\" \");\n    }\n    for (int z = 0; z < x; z ++ ){\n      System.out.print(\"* \");\n      }\n      System.out.println();\n  }\n\n}\n\n```\n\n  结果如下:\n\n```\n      *\n     * *\n    * * *\n   * * * *\n  * * * * *\n```\n## 重载 方法名一致, 但参数列表不同的函数为重载; 名称相同, 参数列表相同, 但返回值类型不同的两个函数不是重载函数, 不能同时存在于一个类中;\n","source":"_posts/JavaReview-day03.md","raw":"---\ntitle: JavaReview_day03\ndate: 2017-11-28T15:04:34.000Z\ntype: JavaReview\ncategories:\n  - Java\ntags:\n  - Java\n  - Knowledge\n---\n\n> Java\n\n## 运算符\n\n### 位运算符:\n\n1.\"<<\": 左位移 2.\">>\": 右位移: 左右为数值的二进制进行左右移动, 其结果等于原值 或 / 2的所以为数的次幂 即 3 << 3 = 3_ 2的三次幂 = 3 * 8 = 24; 3.\"<<<\":无符号左移 4.\">>>\":无符号右移\n\n异或(^)可以用于加密 '&', '|', '^'的运算\n\n使两个变量互换值 m = 3; n = 8; n = n ^ m; m = n ^ m; n = n ^ m;即可完成值互换而不引用第三方变量完成两个变量的值互换\n\n三元运算符 三元运算符会改变所运算元素的数据类型\n\n### 语句\n\nif...else:\n\n三元运算符 对比 if...else 的优缺点 缺点: 三元运算符必须有结果 优点: 三元运算符比 if...else 简单, 可以简化 if...else\n\n二. switch 语句:\n\n1) switch可以中可以接收 byte, short, int char 类型的数据;\n\n2) jdk1.5 加入对枚举类型的支持, jdk1.7 加入了对 String类型的支持;\n\n3) switch 的各个 case 之间和 default 没有顺序,先执行第一个 case, 没有匹配的 case 执行default;\n\n\n#### 结束 switch 语句的两种情况: (1).遇到 break; (2). 执行到 switch 语句结束;\n\n#### 如果匹配的 case  没有对应的 break, 那么程序会继续向下执行, 运行可以执行的语句,\n  直到遇到 break 或程序结束;\n\n4) if ... else 和 switch 语句的对比:\n\n#### switch 性能比 if...else 更高(if ... else 只能顺序执行)\n\n#### 对区间判断可以或对结果为 boolean 类型的判断使用 if, if 的使用范围更广\n\n##  while 语句\n\n### do..while 和 while 的区别\n\n\n#### do...while 先执行循环体, 再判断条件(循环体至少执行一次);\n#### while 先判断再执行\n\n\n## for语句\n\n格式: for(初始化表达式; 循环条件表达式; 循环后表达式){ 执行语句; }\n\n\nfor 循环中的表达式只要为合法的表达式即可运行(循环表达式要有真或假的计算结果);\n\n\n### for 循环中的变量初始化语句只执行一次\n\n### for 循环中的语句不只是一句,多条语句可用 \",\" 隔开,如下:\n\n```\n  for(int x = 0, y = 0, z = 0; x < 4; x ++, y ++,z ++){\n    System.out.println(x+y+z);\n  }\n```\n\n### for 和 while 的无限循环的表达形式\n\n```\n for:\n  for(;;){\n    System.out.println(\"for无限循环\");\n  }\n```\n### 如果 for 循环的条件不声明, 默认为 true;\n\n### while\n```\nwhile(true){\n  System.out.println(\" while 无限循环\");\n}\n```\n\n## break 和 continue 1) break 可以跳出指定循环, 只需要将循环命名即可,具体实现如下\n\n\n```\n    public void testBreak() {\n      w:\n      for (int x = 1; x < 4; x++) {\n          System.out.println(\"out\\t\");\n          q:\n          for (int m = 0; m < 3; m++){\n              if (m == 2){\n                  break w;\n              }\n              System.out.print(\"in\\t\");\n          }\n      }\n      }\n```\n\n  输出结果为: out    in    in\n\n  若将 break 后的 w 删掉,结果为: out    in    in    out    in    in    out    in    in\n\n\n  2). continue\n    作用:结束本次循环,继续下一次循环\n    # 如下代码可以打印 0~10 以内的 2 的倍数:\n```\n        public void testContinue(){\n            for (int i = 0; i < 11; i ++){\n                if (i%2 == 1){\n                    continue;\n                }\n            System.out.println(i);\n            }\n        }\n```\n\n### 1)  continue可以继续指定循环, 只需要将循环命名即可,具体实现如下\n```\n        public void testContinue() {\n          w:\n          for (int i = 0; i < 3; i++) {\n            q:\n            for (int k = 0; k < 4; k++) {\n              System.out.println(\"i = \" + i);\n              continue w;\n              }\n          }\n        }\n```\n\n输出结果为:\n    ```\n               i = 0\n               i = 1\n               i = 2\n    ```\n### break 和 continue语句单独存在时, 下面不可以有任何语句, 因为执行不到(编译报错);\n\n### break 必须在 switch 或 loop(循环)语句内, continue必须在 loop 语句内\n\n### 输出等腰三角形\n```\npublic void testTriangle() {\nfor (int x = 1; x <= 5; x++) {\n    for (int y = x; y < 5; y++) {\n      System.out.print(\" \");\n    }\n    for (int z = 0; z < x; z ++ ){\n      System.out.print(\"* \");\n      }\n      System.out.println();\n  }\n\n}\n\n```\n\n  结果如下:\n\n```\n      *\n     * *\n    * * *\n   * * * *\n  * * * * *\n```\n## 重载 方法名一致, 但参数列表不同的函数为重载; 名称相同, 参数列表相同, 但返回值类型不同的两个函数不是重载函数, 不能同时存在于一个类中;\n","slug":"JavaReview-day03","published":1,"updated":"2017-11-28T08:55:49.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjal06r6s000bwkkxfkqla9mb","content":"<blockquote>\n<p>Java</p>\n</blockquote>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符:\"></a>位运算符:</h3><p>1.”&lt;&lt;”: 左位移 2.”&gt;&gt;”: 右位移: 左右为数值的二进制进行左右移动, 其结果等于原值 或 / 2的所以为数的次幂 即 3 &lt;&lt; 3 = 3_ 2的三次幂 = 3 * 8 = 24; 3.”&lt;&lt;&lt;”:无符号左移 4.”&gt;&gt;&gt;”:无符号右移</p>\n<p>异或(^)可以用于加密 ‘&amp;’, ‘|’, ‘^’的运算</p>\n<p>使两个变量互换值 m = 3; n = 8; n = n ^ m; m = n ^ m; n = n ^ m;即可完成值互换而不引用第三方变量完成两个变量的值互换</p>\n<p>三元运算符 三元运算符会改变所运算元素的数据类型</p>\n<h3 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h3><p>if…else:</p>\n<p>三元运算符 对比 if…else 的优缺点 缺点: 三元运算符必须有结果 优点: 三元运算符比 if…else 简单, 可以简化 if…else</p>\n<p>二. switch 语句:</p>\n<p>1) switch可以中可以接收 byte, short, int char 类型的数据;</p>\n<p>2) jdk1.5 加入对枚举类型的支持, jdk1.7 加入了对 String类型的支持;</p>\n<p>3) switch 的各个 case 之间和 default 没有顺序,先执行第一个 case, 没有匹配的 case 执行default;</p>\n<h4 id=\"结束-switch-语句的两种情况-1-遇到-break-2-执行到-switch-语句结束\"><a href=\"#结束-switch-语句的两种情况-1-遇到-break-2-执行到-switch-语句结束\" class=\"headerlink\" title=\"结束 switch 语句的两种情况: (1).遇到 break; (2). 执行到 switch 语句结束;\"></a>结束 switch 语句的两种情况: (1).遇到 break; (2). 执行到 switch 语句结束;</h4><h4 id=\"如果匹配的-case-没有对应的-break-那么程序会继续向下执行-运行可以执行的语句\"><a href=\"#如果匹配的-case-没有对应的-break-那么程序会继续向下执行-运行可以执行的语句\" class=\"headerlink\" title=\"如果匹配的 case  没有对应的 break, 那么程序会继续向下执行, 运行可以执行的语句,\"></a>如果匹配的 case  没有对应的 break, 那么程序会继续向下执行, 运行可以执行的语句,</h4><p>  直到遇到 break 或程序结束;</p>\n<p>4) if … else 和 switch 语句的对比:</p>\n<h4 id=\"switch-性能比-if…else-更高-if-…-else-只能顺序执行\"><a href=\"#switch-性能比-if…else-更高-if-…-else-只能顺序执行\" class=\"headerlink\" title=\"switch 性能比 if…else 更高(if … else 只能顺序执行)\"></a>switch 性能比 if…else 更高(if … else 只能顺序执行)</h4><h4 id=\"对区间判断可以或对结果为-boolean-类型的判断使用-if-if-的使用范围更广\"><a href=\"#对区间判断可以或对结果为-boolean-类型的判断使用-if-if-的使用范围更广\" class=\"headerlink\" title=\"对区间判断可以或对结果为 boolean 类型的判断使用 if, if 的使用范围更广\"></a>对区间判断可以或对结果为 boolean 类型的判断使用 if, if 的使用范围更广</h4><h2 id=\"while-语句\"><a href=\"#while-语句\" class=\"headerlink\" title=\"while 语句\"></a>while 语句</h2><h3 id=\"do-while-和-while-的区别\"><a href=\"#do-while-和-while-的区别\" class=\"headerlink\" title=\"do..while 和 while 的区别\"></a>do..while 和 while 的区别</h3><h4 id=\"do…while-先执行循环体-再判断条件-循环体至少执行一次\"><a href=\"#do…while-先执行循环体-再判断条件-循环体至少执行一次\" class=\"headerlink\" title=\"do…while 先执行循环体, 再判断条件(循环体至少执行一次);\"></a>do…while 先执行循环体, 再判断条件(循环体至少执行一次);</h4><h4 id=\"while-先判断再执行\"><a href=\"#while-先判断再执行\" class=\"headerlink\" title=\"while 先判断再执行\"></a>while 先判断再执行</h4><h2 id=\"for语句\"><a href=\"#for语句\" class=\"headerlink\" title=\"for语句\"></a>for语句</h2><p>格式: for(初始化表达式; 循环条件表达式; 循环后表达式){ 执行语句; }</p>\n<p>for 循环中的表达式只要为合法的表达式即可运行(循环表达式要有真或假的计算结果);</p>\n<h3 id=\"for-循环中的变量初始化语句只执行一次\"><a href=\"#for-循环中的变量初始化语句只执行一次\" class=\"headerlink\" title=\"for 循环中的变量初始化语句只执行一次\"></a>for 循环中的变量初始化语句只执行一次</h3><h3 id=\"for-循环中的语句不只是一句-多条语句可用-“-”-隔开-如下\"><a href=\"#for-循环中的语句不只是一句-多条语句可用-“-”-隔开-如下\" class=\"headerlink\" title=\"for 循环中的语句不只是一句,多条语句可用 “,” 隔开,如下:\"></a>for 循环中的语句不只是一句,多条语句可用 “,” 隔开,如下:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for(int x = 0, y = 0, z = 0; x &lt; 4; x ++, y ++,z ++)&#123;</span><br><span class=\"line\">  System.out.println(x+y+z);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for-和-while-的无限循环的表达形式\"><a href=\"#for-和-while-的无限循环的表达形式\" class=\"headerlink\" title=\"for 和 while 的无限循环的表达形式\"></a>for 和 while 的无限循环的表达形式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for:</span><br><span class=\"line\"> for(;;)&#123;</span><br><span class=\"line\">   System.out.println(&quot;for无限循环&quot;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"如果-for-循环的条件不声明-默认为-true\"><a href=\"#如果-for-循环的条件不声明-默认为-true\" class=\"headerlink\" title=\"如果 for 循环的条件不声明, 默认为 true;\"></a>如果 for 循环的条件不声明, 默认为 true;</h3><h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(true)&#123;</span><br><span class=\"line\">  System.out.println(&quot; while 无限循环&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"break-和-continue-1-break-可以跳出指定循环-只需要将循环命名即可-具体实现如下\"><a href=\"#break-和-continue-1-break-可以跳出指定循环-只需要将循环命名即可-具体实现如下\" class=\"headerlink\" title=\"break 和 continue 1) break 可以跳出指定循环, 只需要将循环命名即可,具体实现如下\"></a>break 和 continue 1) break 可以跳出指定循环, 只需要将循环命名即可,具体实现如下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testBreak() &#123;</span><br><span class=\"line\">  w:</span><br><span class=\"line\">  for (int x = 1; x &lt; 4; x++) &#123;</span><br><span class=\"line\">      System.out.println(&quot;out\\t&quot;);</span><br><span class=\"line\">      q:</span><br><span class=\"line\">      for (int m = 0; m &lt; 3; m++)&#123;</span><br><span class=\"line\">          if (m == 2)&#123;</span><br><span class=\"line\">              break w;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          System.out.print(&quot;in\\t&quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>  输出结果为: out    in    in</p>\n<p>  若将 break 后的 w 删掉,结果为: out    in    in    out    in    in    out    in    in</p>\n<p>  2). continue<br>    作用:结束本次循环,继续下一次循环</p>\n<pre><code># 如下代码可以打印 0~10 以内的 2 的倍数:\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testContinue()&#123;</span><br><span class=\"line\">    for (int i = 0; i &lt; 11; i ++)&#123;</span><br><span class=\"line\">        if (i%2 == 1)&#123;</span><br><span class=\"line\">            continue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-continue可以继续指定循环-只需要将循环命名即可-具体实现如下\"><a href=\"#1-continue可以继续指定循环-只需要将循环命名即可-具体实现如下\" class=\"headerlink\" title=\"1)  continue可以继续指定循环, 只需要将循环命名即可,具体实现如下\"></a>1)  continue可以继续指定循环, 只需要将循环命名即可,具体实现如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testContinue() &#123;</span><br><span class=\"line\">  w:</span><br><span class=\"line\">  for (int i = 0; i &lt; 3; i++) &#123;</span><br><span class=\"line\">    q:</span><br><span class=\"line\">    for (int k = 0; k &lt; 4; k++) &#123;</span><br><span class=\"line\">      System.out.println(&quot;i = &quot; + i);</span><br><span class=\"line\">      continue w;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果为:<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = 0</span><br><span class=\"line\">i = 1</span><br><span class=\"line\">i = 2</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"break-和-continue语句单独存在时-下面不可以有任何语句-因为执行不到-编译报错\"><a href=\"#break-和-continue语句单独存在时-下面不可以有任何语句-因为执行不到-编译报错\" class=\"headerlink\" title=\"break 和 continue语句单独存在时, 下面不可以有任何语句, 因为执行不到(编译报错);\"></a>break 和 continue语句单独存在时, 下面不可以有任何语句, 因为执行不到(编译报错);</h3><h3 id=\"break-必须在-switch-或-loop-循环-语句内-continue必须在-loop-语句内\"><a href=\"#break-必须在-switch-或-loop-循环-语句内-continue必须在-loop-语句内\" class=\"headerlink\" title=\"break 必须在 switch 或 loop(循环)语句内, continue必须在 loop 语句内\"></a>break 必须在 switch 或 loop(循环)语句内, continue必须在 loop 语句内</h3><h3 id=\"输出等腰三角形\"><a href=\"#输出等腰三角形\" class=\"headerlink\" title=\"输出等腰三角形\"></a>输出等腰三角形</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testTriangle() &#123;</span><br><span class=\"line\">for (int x = 1; x &lt;= 5; x++) &#123;</span><br><span class=\"line\">    for (int y = x; y &lt; 5; y++) &#123;</span><br><span class=\"line\">      System.out.print(&quot; &quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int z = 0; z &lt; x; z ++ )&#123;</span><br><span class=\"line\">      System.out.print(&quot;* &quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  结果如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    *</span><br><span class=\"line\">   * *</span><br><span class=\"line\">  * * *</span><br><span class=\"line\"> * * * *</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure>\n<h2 id=\"重载-方法名一致-但参数列表不同的函数为重载-名称相同-参数列表相同-但返回值类型不同的两个函数不是重载函数-不能同时存在于一个类中\"><a href=\"#重载-方法名一致-但参数列表不同的函数为重载-名称相同-参数列表相同-但返回值类型不同的两个函数不是重载函数-不能同时存在于一个类中\" class=\"headerlink\" title=\"重载 方法名一致, 但参数列表不同的函数为重载; 名称相同, 参数列表相同, 但返回值类型不同的两个函数不是重载函数, 不能同时存在于一个类中;\"></a>重载 方法名一致, 但参数列表不同的函数为重载; 名称相同, 参数列表相同, 但返回值类型不同的两个函数不是重载函数, 不能同时存在于一个类中;</h2>","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Java</p>\n</blockquote>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><h3 id=\"位运算符\"><a href=\"#位运算符\" class=\"headerlink\" title=\"位运算符:\"></a>位运算符:</h3><p>1.”&lt;&lt;”: 左位移 2.”&gt;&gt;”: 右位移: 左右为数值的二进制进行左右移动, 其结果等于原值 或 / 2的所以为数的次幂 即 3 &lt;&lt; 3 = 3_ 2的三次幂 = 3 * 8 = 24; 3.”&lt;&lt;&lt;”:无符号左移 4.”&gt;&gt;&gt;”:无符号右移</p>\n<p>异或(^)可以用于加密 ‘&amp;’, ‘|’, ‘^’的运算</p>\n<p>使两个变量互换值 m = 3; n = 8; n = n ^ m; m = n ^ m; n = n ^ m;即可完成值互换而不引用第三方变量完成两个变量的值互换</p>\n<p>三元运算符 三元运算符会改变所运算元素的数据类型</p>\n<h3 id=\"语句\"><a href=\"#语句\" class=\"headerlink\" title=\"语句\"></a>语句</h3><p>if…else:</p>\n<p>三元运算符 对比 if…else 的优缺点 缺点: 三元运算符必须有结果 优点: 三元运算符比 if…else 简单, 可以简化 if…else</p>\n<p>二. switch 语句:</p>\n<p>1) switch可以中可以接收 byte, short, int char 类型的数据;</p>\n<p>2) jdk1.5 加入对枚举类型的支持, jdk1.7 加入了对 String类型的支持;</p>\n<p>3) switch 的各个 case 之间和 default 没有顺序,先执行第一个 case, 没有匹配的 case 执行default;</p>\n<h4 id=\"结束-switch-语句的两种情况-1-遇到-break-2-执行到-switch-语句结束\"><a href=\"#结束-switch-语句的两种情况-1-遇到-break-2-执行到-switch-语句结束\" class=\"headerlink\" title=\"结束 switch 语句的两种情况: (1).遇到 break; (2). 执行到 switch 语句结束;\"></a>结束 switch 语句的两种情况: (1).遇到 break; (2). 执行到 switch 语句结束;</h4><h4 id=\"如果匹配的-case-没有对应的-break-那么程序会继续向下执行-运行可以执行的语句\"><a href=\"#如果匹配的-case-没有对应的-break-那么程序会继续向下执行-运行可以执行的语句\" class=\"headerlink\" title=\"如果匹配的 case  没有对应的 break, 那么程序会继续向下执行, 运行可以执行的语句,\"></a>如果匹配的 case  没有对应的 break, 那么程序会继续向下执行, 运行可以执行的语句,</h4><p>  直到遇到 break 或程序结束;</p>\n<p>4) if … else 和 switch 语句的对比:</p>\n<h4 id=\"switch-性能比-if…else-更高-if-…-else-只能顺序执行\"><a href=\"#switch-性能比-if…else-更高-if-…-else-只能顺序执行\" class=\"headerlink\" title=\"switch 性能比 if…else 更高(if … else 只能顺序执行)\"></a>switch 性能比 if…else 更高(if … else 只能顺序执行)</h4><h4 id=\"对区间判断可以或对结果为-boolean-类型的判断使用-if-if-的使用范围更广\"><a href=\"#对区间判断可以或对结果为-boolean-类型的判断使用-if-if-的使用范围更广\" class=\"headerlink\" title=\"对区间判断可以或对结果为 boolean 类型的判断使用 if, if 的使用范围更广\"></a>对区间判断可以或对结果为 boolean 类型的判断使用 if, if 的使用范围更广</h4><h2 id=\"while-语句\"><a href=\"#while-语句\" class=\"headerlink\" title=\"while 语句\"></a>while 语句</h2><h3 id=\"do-while-和-while-的区别\"><a href=\"#do-while-和-while-的区别\" class=\"headerlink\" title=\"do..while 和 while 的区别\"></a>do..while 和 while 的区别</h3><h4 id=\"do…while-先执行循环体-再判断条件-循环体至少执行一次\"><a href=\"#do…while-先执行循环体-再判断条件-循环体至少执行一次\" class=\"headerlink\" title=\"do…while 先执行循环体, 再判断条件(循环体至少执行一次);\"></a>do…while 先执行循环体, 再判断条件(循环体至少执行一次);</h4><h4 id=\"while-先判断再执行\"><a href=\"#while-先判断再执行\" class=\"headerlink\" title=\"while 先判断再执行\"></a>while 先判断再执行</h4><h2 id=\"for语句\"><a href=\"#for语句\" class=\"headerlink\" title=\"for语句\"></a>for语句</h2><p>格式: for(初始化表达式; 循环条件表达式; 循环后表达式){ 执行语句; }</p>\n<p>for 循环中的表达式只要为合法的表达式即可运行(循环表达式要有真或假的计算结果);</p>\n<h3 id=\"for-循环中的变量初始化语句只执行一次\"><a href=\"#for-循环中的变量初始化语句只执行一次\" class=\"headerlink\" title=\"for 循环中的变量初始化语句只执行一次\"></a>for 循环中的变量初始化语句只执行一次</h3><h3 id=\"for-循环中的语句不只是一句-多条语句可用-“-”-隔开-如下\"><a href=\"#for-循环中的语句不只是一句-多条语句可用-“-”-隔开-如下\" class=\"headerlink\" title=\"for 循环中的语句不只是一句,多条语句可用 “,” 隔开,如下:\"></a>for 循环中的语句不只是一句,多条语句可用 “,” 隔开,如下:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for(int x = 0, y = 0, z = 0; x &lt; 4; x ++, y ++,z ++)&#123;</span><br><span class=\"line\">  System.out.println(x+y+z);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"for-和-while-的无限循环的表达形式\"><a href=\"#for-和-while-的无限循环的表达形式\" class=\"headerlink\" title=\"for 和 while 的无限循环的表达形式\"></a>for 和 while 的无限循环的表达形式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for:</span><br><span class=\"line\"> for(;;)&#123;</span><br><span class=\"line\">   System.out.println(&quot;for无限循环&quot;);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"如果-for-循环的条件不声明-默认为-true\"><a href=\"#如果-for-循环的条件不声明-默认为-true\" class=\"headerlink\" title=\"如果 for 循环的条件不声明, 默认为 true;\"></a>如果 for 循环的条件不声明, 默认为 true;</h3><h3 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while(true)&#123;</span><br><span class=\"line\">  System.out.println(&quot; while 无限循环&quot;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"break-和-continue-1-break-可以跳出指定循环-只需要将循环命名即可-具体实现如下\"><a href=\"#break-和-continue-1-break-可以跳出指定循环-只需要将循环命名即可-具体实现如下\" class=\"headerlink\" title=\"break 和 continue 1) break 可以跳出指定循环, 只需要将循环命名即可,具体实现如下\"></a>break 和 continue 1) break 可以跳出指定循环, 只需要将循环命名即可,具体实现如下</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testBreak() &#123;</span><br><span class=\"line\">  w:</span><br><span class=\"line\">  for (int x = 1; x &lt; 4; x++) &#123;</span><br><span class=\"line\">      System.out.println(&quot;out\\t&quot;);</span><br><span class=\"line\">      q:</span><br><span class=\"line\">      for (int m = 0; m &lt; 3; m++)&#123;</span><br><span class=\"line\">          if (m == 2)&#123;</span><br><span class=\"line\">              break w;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">          System.out.print(&quot;in\\t&quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>  输出结果为: out    in    in</p>\n<p>  若将 break 后的 w 删掉,结果为: out    in    in    out    in    in    out    in    in</p>\n<p>  2). continue<br>    作用:结束本次循环,继续下一次循环</p>\n<pre><code># 如下代码可以打印 0~10 以内的 2 的倍数:\n</code></pre><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testContinue()&#123;</span><br><span class=\"line\">    for (int i = 0; i &lt; 11; i ++)&#123;</span><br><span class=\"line\">        if (i%2 == 1)&#123;</span><br><span class=\"line\">            continue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    System.out.println(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1-continue可以继续指定循环-只需要将循环命名即可-具体实现如下\"><a href=\"#1-continue可以继续指定循环-只需要将循环命名即可-具体实现如下\" class=\"headerlink\" title=\"1)  continue可以继续指定循环, 只需要将循环命名即可,具体实现如下\"></a>1)  continue可以继续指定循环, 只需要将循环命名即可,具体实现如下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testContinue() &#123;</span><br><span class=\"line\">  w:</span><br><span class=\"line\">  for (int i = 0; i &lt; 3; i++) &#123;</span><br><span class=\"line\">    q:</span><br><span class=\"line\">    for (int k = 0; k &lt; 4; k++) &#123;</span><br><span class=\"line\">      System.out.println(&quot;i = &quot; + i);</span><br><span class=\"line\">      continue w;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果为:<br>    <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = 0</span><br><span class=\"line\">i = 1</span><br><span class=\"line\">i = 2</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"break-和-continue语句单独存在时-下面不可以有任何语句-因为执行不到-编译报错\"><a href=\"#break-和-continue语句单独存在时-下面不可以有任何语句-因为执行不到-编译报错\" class=\"headerlink\" title=\"break 和 continue语句单独存在时, 下面不可以有任何语句, 因为执行不到(编译报错);\"></a>break 和 continue语句单独存在时, 下面不可以有任何语句, 因为执行不到(编译报错);</h3><h3 id=\"break-必须在-switch-或-loop-循环-语句内-continue必须在-loop-语句内\"><a href=\"#break-必须在-switch-或-loop-循环-语句内-continue必须在-loop-语句内\" class=\"headerlink\" title=\"break 必须在 switch 或 loop(循环)语句内, continue必须在 loop 语句内\"></a>break 必须在 switch 或 loop(循环)语句内, continue必须在 loop 语句内</h3><h3 id=\"输出等腰三角形\"><a href=\"#输出等腰三角形\" class=\"headerlink\" title=\"输出等腰三角形\"></a>输出等腰三角形</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public void testTriangle() &#123;</span><br><span class=\"line\">for (int x = 1; x &lt;= 5; x++) &#123;</span><br><span class=\"line\">    for (int y = x; y &lt; 5; y++) &#123;</span><br><span class=\"line\">      System.out.print(&quot; &quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    for (int z = 0; z &lt; x; z ++ )&#123;</span><br><span class=\"line\">      System.out.print(&quot;* &quot;);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      System.out.println();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>  结果如下:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    *</span><br><span class=\"line\">   * *</span><br><span class=\"line\">  * * *</span><br><span class=\"line\"> * * * *</span><br><span class=\"line\">* * * * *</span><br></pre></td></tr></table></figure>\n<h2 id=\"重载-方法名一致-但参数列表不同的函数为重载-名称相同-参数列表相同-但返回值类型不同的两个函数不是重载函数-不能同时存在于一个类中\"><a href=\"#重载-方法名一致-但参数列表不同的函数为重载-名称相同-参数列表相同-但返回值类型不同的两个函数不是重载函数-不能同时存在于一个类中\" class=\"headerlink\" title=\"重载 方法名一致, 但参数列表不同的函数为重载; 名称相同, 参数列表相同, 但返回值类型不同的两个函数不是重载函数, 不能同时存在于一个类中;\"></a>重载 方法名一致, 但参数列表不同的函数为重载; 名称相同, 参数列表相同, 但返回值类型不同的两个函数不是重载函数, 不能同时存在于一个类中;</h2>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjal06r6s000bwkkxfkqla9mb","category_id":"cjal06r6x000dwkkxetwb55j3","_id":"cjal06r70000hwkkxdn4tqkl1"}],"PostTag":[{"post_id":"cjal06qxp0000wkkxlb9nbt2l","tag_id":"cjal06qy10004wkkx8nuf0e42","_id":"cjal06qy60007wkkx8mztfg5y"},{"post_id":"cjal06qy30005wkkxyxmauvpe","tag_id":"cjal06qy60006wkkxg4ex81lx","_id":"cjal06qy70008wkkx2s653hny"},{"post_id":"cjal06r6s000bwkkxfkqla9mb","tag_id":"cjal06qy10004wkkx8nuf0e42","_id":"cjal06r6z000fwkkx0zx2yu3m"},{"post_id":"cjal06r6s000bwkkxfkqla9mb","tag_id":"cjal06r6y000ewkkxe1ok08lf","_id":"cjal06r6z000gwkkxqfkwdxqf"},{"post_id":"cjal06r6q000awkkxfb0npi2w","tag_id":"cjam78aky0000y4kxhdjrl7z4","_id":"cjam78al60001y4kx0ddowc36"}],"Tag":[{"name":"Java","_id":"cjal06qy10004wkkx8nuf0e42"},{"name":"Welcome","_id":"cjal06qy60006wkkxg4ex81lx"},{"name":"Knowledge","_id":"cjal06r6y000ewkkxe1ok08lf"},{"name":"-Java","_id":"cjam78aky0000y4kxhdjrl7z4"}]}}